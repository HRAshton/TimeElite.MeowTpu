@page
@using System.Web
@using Core.Extensions
@using WebUi.Models.Calendar
@model IndexModel

@section Scripts
{
    <script src="/js/site.es5.min.js"></script>
}

@functions {

    private static string GetEventAdditionClasses(CalendarEventModel ev, bool isSame)
    {
        var classes = string.Empty;
        if (isSame) classes += "same ";
        if (ev.IsShadowed) classes += "outside ";
        if (ev.IsHiddenByUser) classes += "hidden-by-user ";

        return classes;
    }

    private static string GetHideId(CalendarEventModel ev)
    {
        return $"{ev.HashOfParent}:{(byte) ev.Date.GetWeekType()}:{(byte) ev.Date.DayOfWeek}:{ev.Date.GetLessonIndex()}:{HttpUtility.UrlEncode(ev.Place)}";
    }

    private string GetToggleWindowLink()
    {
        var viewType = (byte) Model.SettingsModel.ViewType;
        var oldShowWindow = Model.SettingsModel.ShowWindows ? 1 : 0;
        var newShowWindow = Model.SettingsModel.ShowWindows ? 0 : 1;

        return Request.QueryString.Value.Replace($"?{viewType};{oldShowWindow};", $"?{viewType};{newShowWindow};");
    }

}

@{
    ViewData["Title"] = "Расписание";
}

<div id="app">
    <div id="calendar">
        <div class=".head">
            <ul id="legend-show-block" style="display: @(!Model.SettingsModel.Items.Any() ? "none" : "inline-flex")">
                @foreach (var item in Model.CalendarModel.Legend)
                {
                    <li>
                        <div style="border-color: @item.ColorHex"></div> @item.Name.Split(" ").FirstOrDefault()
                    </li>
                }
                <li>
                    <input id="clear-legend" type="button" class="far fa-times-circle" value="&#xf057"/>
                </li>
                <li id="toggle-windows">
                    <a href="@GetToggleWindowLink()">
                        @(Model.SettingsModel.ShowWindows ? "Скрыть" : "Показать")
                        <br/>
                        окна
                    </a>
                </li>
            </ul>

            <form id="legend-edit-block" style="display: @(Model.SettingsModel.Items.Any() ? "none" : "inline-flex")">
                <select id="selector" name="items"></select>
                <input id="save-legend" type="button" class="far fa-check-circle" value="&#xf058"/>
            </form>
        </div>

        <ol id="matrix" class="days">
            @foreach (var day in Model.CalendarModel.Matrix)
            {
                <li class="day @(day.Date.Day == DateTime.Today.Day ? "today" : "")">
                    <div class="date">
                        <span class="weekday">@day.Weekday</span>
                        <span class="month">@day.Month</span>
                        <span class="day">@day.Day</span>
                        <span class="year">@day.Year</span>
                    </div>
                    <div class="events">
                        @for (var i = 0; i < day.Events.Count; i++)
                        {
                            var isSame = i < day.Events.Count - 1 && day.Events[i].Date == day.Events[i + 1].Date;
                            var ev = day.Events[i];

                            <div class="event first @GetEventAdditionClasses(ev, isSame)" style="border-color: @ev.ColorHex" data-hideId="@GetHideId(ev)">
                                <span class="type type-@ev.Type">@Html.DisplayFor(m => ev.Type)</span>
                                <p>
                                    <span class="time">@ev.Date.ToString("HH:mm")</span> <b>@ev.Name</b>
                                </p>
                                <ol class="summary">
                                    @foreach (var (place, teacher) in ev.Summary)
                                    {
                                        <li>
                                            <span>@place</span>
                                            <span>@teacher</span>
                                        </li>
                                    }
                                </ol>
                            </div>
                        }
                    </div>
                </li>
            }
        </ol>
    </div>
</div>